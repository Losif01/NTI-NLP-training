# -*- coding: utf-8 -*-
"""Day1 tasks.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/11JxNqzCHcr2L3ICSW8d_9M_3pDU4BgZ3
"""

import re

text = "Hello 123, this is a test with 4567 and numbers like 89."

# Find all numbers
print(re.findall(r'\d+', text))  # ['123', '4567', '89']

# Match all words
print(re.findall(r'\w+', text))  # ['Hello', '123', 'this', ...]

#task1
sample_text = """
My email is john.doe@example.com and my alternate is jane_doe123@company.co.uk.
I was born on 1996-05-14 and my sister on 2000/12/01.
The prices are: $23.45, €56.00, and ¥1000.
Call me at 010-12345678 or 01123456789. Office: 02-2345678.
Usernames: _john, user.99, admin-user, $invalid_user
Passwords: Pass123!, pass12, 12345678, Welcome@2025, weak_pass
"""
#Find all lowercase words.

#Find all 3-digit numbers.

text = "abc 1234 abcd 123 12"

# Find 3 or more digits
print(re.findall(r'\b\d{3,}\b', text))  # ['1234', '123']

# Words starting with 'a'
print(re.findall(r'\ba\w*', text))  # ['abc', 'abcd']

#Task2

import re

sample_text = """
My email is john.doe@example.com and my alternate is jane_doe123@company.co.uk.
I was born on 1996-05-14 and my sister on 2000/12/01.
The prices are: $23.45, €56.00, and ¥1000.
Public traffic is basic logic and poetic.
Call me at 010-12345678 or 01123456789. Office: 02-2345678.
"""

#Find words that end with 'c'.

#Match numbers with exactly 2 digits.

text = "cat bat rat mat"

# Match either cat or rat
print(re.findall(r'cat|rat', text))  # ['cat', 'rat']

# Grouping with repetition
text = "ha haha hahahaha"
print(re.findall(r'(ha)+', text))  # ['ha', 'haha', 'hahaha']

#Task3
import re

sample_text = """
I saw a car and a cat in the cartoon.
The racecar was fast. Cats are agile.
She laughed: hahaha, ha haaaa hahahahaha!
"""


#Find either "car" or "cat".

#Match words with "ha" repeated at least twice.

text = "Emails: test.email@domain.com, second@host.org"

# Email regex
emails = re.findall(r'\b[\w.-]+@[\w.-]+\.\w+\b', text)
print("Emails:", emails)

text = "Phone: 010-1234567 or 01123456789"
phones = re.findall(r'\b\d{3}-?\d{7,8}\b', text)
print("Phones:", phones)

#task4
import re

sample_text = """
Contact us at support@company.com or info123@mail.co.uk.
Also try: hr@jobs.gov.eg, wrong@nope, user.name+filter@sub.domain.org
You can call 01012345678 or 01123456789, or landline 02-12345678.
Some invalid: 013-1234567, 0159999, 015-99999999, 012345
"""

#Extract all emails from a text list.

#Extract all Egyptian mobile numbers.

html = "<p>This is <b>bold</b> text.</p>"
clean = re.sub(r'<.*?>', '', html)
print(clean)  # This is bold text.
text = "Name: John Doe, Age: 30"
anon = re.sub(r'\d+', 'XX', text)
print(anon)  # Name: John Doe, Age: XX

#task5
import re

sample_text = """
Hello there! My number is 012-345-6789. I paid $50.99 for item #1234.
Wow... that's crazy, right?
"""

#Remove all punctuation from a sentence.

#Replace all digits with a *.

pattern = re.compile(r'hello', re.I)
print(bool(pattern.search("Hello there!")))  # True
pattern = re.compile(r"""
    (?=.*[A-Z])     # at least one uppercase
    (?=.*[a-z])     # at least one lowercase
    (?=.*\d)        # at least one digit
    .{8,}           # minimum 8 chars
""", re.VERBOSE)

print(bool(pattern.match("Aa123456")))  # True

#task 6
import re

data = {
    "emails": [
        "john.doe@gmail.com", "invalid-email@", "hello@site", "test@company.org"
    ],
    "phones": [
        "01012345678", "01123456789", "0133456789", "01234", "01599999999"
    ],
    "passwords": [
        "Pass123!", "123456", "abcdefg", "Welcome@2024", "weak_pass"
    ]
}

#Build a small script that:
#1.Reads a list of emails, phone numbers, and passwords

#2.Validates each using regex

#3.Outputs “valid” or “invalid” for each